/***  This is a generated file, do not edit ***/
\#include "workarounds.h" // _must_ be first
\#include <boost/python.hpp>

\#include "emit_generated.h"
\#include <generated/messages.h>

namespace bp = boost::python;
using namespace cauv;

struct enum_pickler : bp::pickle_suite{
    static boost::python::tuple getinitargs(MessageType::e const& e){
        return boost::python::make_tuple(int(e));
    }
};

void emitEnums(){
    // MessageType Enum

    bp::enum_<MessageType::e>("MessageType")
        #for $g in $groups
        #for $m in $g.messages
        .value("$m.name", MessageType::$m.name)
        #end for
        #end for
        .value("NumValues", MessageType::NumValues)
        // boost python pickling of emails is b0rked, and this don't fix it
        //.def_pickle(enum_pickler())
    ;
    
    // Generated Enums
#for $e in $enums
    bp::enum_<${e.name}::e>("${e.name}")
        #for $i, $v in $enumerate($e.values)
        .value("${v.name}", ${e.name}::${v.name})
        #end for
        .value("NumValues", ${e.name}::NumValues)
    ;

#end for
}

