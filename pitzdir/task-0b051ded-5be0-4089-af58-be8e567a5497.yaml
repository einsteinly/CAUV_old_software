attached_files: []
components: []
created_time: 2010-11-05 10:20:54.972344
description: !!python/unicode "We need a high-throughput, low-latency message bus\
  \ (to replace Spread which is\r\ntoo slow) it must:  \r\n - not copy data that need\
  \ not be copied (ie messages between programs on the\r\n   same host should not\
  \ involve data being copied)\r\n - not serialise / deserialise data between programs\
  \ with the same data\r\n   representations on the same host (ie, use shared memory)\r\
  \n - provide at least the following data types to be used with any Plain Old Data\r\
  \n   Structs:\r\n    - vector\r\n    - map\r\n - prove a simple interface; preferably\
  \ native c++\r\n - be easy to setup across a local network (preferably with no configuration\r\
  \n   required and some sort of automatic discovery)\r\n - enable large message sequences\
  \ to be replayed either centrally\r\n   or by a client program in a way that is\
  \ indistinguishable to other\r\n   clients and preferably rovides intelligent verification\
  \ of messages\r\n   against those expected.\r\n - be completely unaware of data\
  \ types: we don't want to have to\r\n   recompile it if the message specification\
  \ changes.\r\n   This is highly non-trivial and considerable thought and actual\r\
  \n   ''design'' will be necessary to get it right."
estimate: !!python/object:uuid.UUID
  int: 221360562648380518769412743827279781563
milestone: !!python/object:uuid.UUID
  int: 231943652690746325723562379282290458799
modified_time: 2011-02-23 17:50:52.681812
owner: !!python/object:uuid.UUID
  int: 236388421408798579890985238796729312670
points: null
pscore: !!python/unicode '4'
status: !!python/object:uuid.UUID
  int: 169187340753552385114968941926541347595
tags:
- !!python/object:uuid.UUID
  int: 292557765731504791880568992605661195763
title: Spread Replacement
type: task
uuid: !!python/object:uuid.UUID
  int: 14648076433314010567804812502658339991
yaml_file_saved: 2011-02-23 17:50:52.777717
