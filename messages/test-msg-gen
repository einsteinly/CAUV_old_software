#!/bin/bash
(make) 2>tmp.err && (if test -s tmp.err ; then (echo -e "  \E[1;33m[MAKE WARNING]\E[m" && cat tmp.err) ; else (echo -e "  \E[1;32m[MAKE OK]\E[m") ; fi) || (echo -e "  \E[1;31m[MAKE ERROR]\E[m" && cat tmp.err && rm -f tmp.err && exit 1); rm -f tmp.err
(bin/msg-generator sample_msg -o messages -l c++ ; bin/msg-generator sample_msg -l java -o messages) 2>tmp.err && (if test -s tmp.err ; then (echo -e "  \E[1;33m[MSG-GEN WARNING]\E[m" && cat tmp.err) ; else (echo -e "  \E[1;32m[MSG-GEN OK]\E[m") ; fi) || (echo -e "  \E[1;31m[MSG-GEN ERROR]\E[m" && cat tmp.err && rm -f tmp.err && exit 1) ; rm -f tmp.err
(g++ messages.cpp test.cpp -lboost_serialization -g -Wall) 2>tmp.err && (if test -s tmp.err ; then (echo -e "  \E[1;33m[C++ WARNING]\E[m" && cat tmp.err) ; else (echo -e "  \E[1;32m[C++ OK]\E[m" ; rm messages.cpp messages.h) ; fi) || (echo -e "  \E[1;31m[C++ ERROR]\E[m" && cat tmp.err); rm -f tmp.err a.out
(javac messages.java) 2>tmp.err && (if test -s tmp.err ; then (echo -e "  \E[1;33m[JAVA WARNING]\E[m" && cat tmp.err) ; else (echo -e "  \E[1;32m[JAVA OK]\E[m" ; rm messages.java) ; fi) || (echo -e "  \E[1;31m[JAVA ERROR]\E[m" && cat tmp.err); rm -f tmp.err *.class
